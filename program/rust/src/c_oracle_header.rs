#![allow(non_camel_case_types)]
#![allow(non_snake_case)]
//we do not use all the variables in oracle.h, so this helps with the warnings
#![allow(dead_code)]
//All the custom trait imports should go here
use bytemuck::{
    Pod,
    Zeroable,
};

//bindings.rs is generated by build.rs to include
//things defined in bindings.h
include!("../bindings.rs");

#[cfg(target_endian = "little")]
unsafe impl Zeroable for pc_acc {
}

#[cfg(target_endian = "little")]
unsafe impl Pod for pc_acc {
}

#[cfg(target_endian = "little")]
unsafe impl Zeroable for pc_map_table {
}

#[cfg(target_endian = "little")]
unsafe impl Pod for pc_map_table {
}

#[cfg(target_endian = "little")]
unsafe impl Zeroable for pc_prod {
}

#[cfg(target_endian = "little")]
unsafe impl Pod for pc_prod {
}

#[cfg(target_endian = "little")]
unsafe impl Zeroable for pc_price {
}

#[cfg(target_endian = "little")]
unsafe impl Pod for pc_price {
}

#[cfg(target_endian = "little")]
unsafe impl Zeroable for cmd_hdr {
}

#[cfg(target_endian = "little")]
unsafe impl Pod for cmd_hdr {
}

#[cfg(target_endian = "little")]

unsafe impl Zeroable for pc_price_info {
}

#[cfg(target_endian = "little")]
unsafe impl Pod for pc_price_info {
}

#[cfg(target_endian = "little")]
unsafe impl Zeroable for cmd_upd_price {
}

#[cfg(target_endian = "little")]
unsafe impl Pod for cmd_upd_price {
}

#[cfg(target_endian = "little")]
unsafe impl Zeroable for pc_ema {
}

#[cfg(target_endian = "little")]
unsafe impl Pod for pc_ema {
}

unsafe impl Zeroable for cmd_add_price_t {
}

#[cfg(target_endian = "little")]
unsafe impl Pod for cmd_add_price_t {
}

#[cfg(target_endian = "little")]
unsafe impl Zeroable for cmd_add_publisher_t {
}

#[cfg(target_endian = "little")]
unsafe impl Pod for cmd_add_publisher_t {
}


#[cfg(target_endian = "little")]
unsafe impl Zeroable for pc_pub_key_t {
}

#[cfg(target_endian = "little")]
unsafe impl Pod for pc_pub_key_t {
}


#[cfg(target_endian = "little")]
unsafe impl Zeroable for pc_price_comp_t {
}

#[cfg(target_endian = "little")]
unsafe impl Pod for pc_price_comp_t {
}
