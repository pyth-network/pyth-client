#![allow(non_camel_case_types)]
#![allow(non_snake_case)]
//we do not use all the variables in oracle.h, so this helps with the warnings
#![allow(dead_code)]
//All the custom trait imports should go here
use bytemuck::{
    Pod,
    Zeroable,
};
use std::mem::size_of;
//bindings.rs is generated by build.rs to include
//things defined in bindings.h
include!("../bindings.rs");

/// The PythAccount trait's purpose is to attach constants to the 3 types of accounts that Pyth has
/// (mapping, price, product). This allows less duplicated code, because now we can create generic
/// functions to perform common checks on the accounts and to load and initialize the accounts.
pub trait PythAccount: Pod {
    const ACCOUNT_TYPE: u32;
    const INITIAL_SIZE: u32;
}

impl PythAccount for pc_map_table_t {
    const ACCOUNT_TYPE: u32 = PC_ACCTYPE_MAPPING;
    const INITIAL_SIZE: u32 = PC_MAP_TABLE_T_PROD_OFFSET as u32;
}

impl PythAccount for pc_prod_t {
    const ACCOUNT_TYPE: u32 = PC_ACCTYPE_PRODUCT;
    const INITIAL_SIZE: u32 = size_of::<pc_prod_t>() as u32;
}

impl PythAccount for pc_price_t {
    const ACCOUNT_TYPE: u32 = PC_ACCTYPE_PRICE;
    const INITIAL_SIZE: u32 = PC_PRICE_T_COMP_OFFSET as u32;
}


#[cfg(target_endian = "little")]
unsafe impl Zeroable for pc_acc {
}

#[cfg(target_endian = "little")]
unsafe impl Pod for pc_acc {
}

#[cfg(target_endian = "little")]
unsafe impl Zeroable for pc_map_table {
}

#[cfg(target_endian = "little")]
unsafe impl Pod for pc_map_table {
}

#[cfg(target_endian = "little")]
unsafe impl Zeroable for pc_prod {
}

#[cfg(target_endian = "little")]
unsafe impl Pod for pc_prod {
}

#[cfg(target_endian = "little")]
unsafe impl Zeroable for pc_price {
}

#[cfg(target_endian = "little")]
unsafe impl Pod for pc_price {
}

#[cfg(target_endian = "little")]
unsafe impl Zeroable for cmd_hdr {
}

#[cfg(target_endian = "little")]
unsafe impl Pod for cmd_hdr {
}

#[cfg(target_endian = "little")]

unsafe impl Zeroable for pc_price_info {
}

#[cfg(target_endian = "little")]
unsafe impl Pod for pc_price_info {
}

#[cfg(target_endian = "little")]
unsafe impl Zeroable for cmd_upd_price {
}

#[cfg(target_endian = "little")]
unsafe impl Pod for cmd_upd_price {
}

#[cfg(target_endian = "little")]
unsafe impl Zeroable for pc_ema {
}

#[cfg(target_endian = "little")]
unsafe impl Pod for pc_ema {
}

unsafe impl Zeroable for cmd_add_price_t {
}

#[cfg(target_endian = "little")]
unsafe impl Pod for cmd_add_price_t {
}

#[cfg(target_endian = "little")]
unsafe impl Zeroable for cmd_add_publisher_t {
}

#[cfg(target_endian = "little")]
unsafe impl Pod for cmd_add_publisher_t {
}


#[cfg(target_endian = "little")]
unsafe impl Zeroable for pc_pub_key_t {
}

#[cfg(target_endian = "little")]
unsafe impl Pod for pc_pub_key_t {
}


#[cfg(target_endian = "little")]
unsafe impl Zeroable for pc_price_comp_t {
}

#[cfg(target_endian = "little")]
unsafe impl Pod for pc_price_comp_t {
}
