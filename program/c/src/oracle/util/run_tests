#!/bin/sh

module purge          || exit 1
module load gcc-9.3.0 || exit 1

./clean       || exit 1
mkdir -pv bin || exit 1

CC="gcc -g -Wall -Werror -Wextra -Wconversion -Wstrict-aliasing=2 -Wimplicit-fallthrough=2 -pedantic -D_XOPEN_SOURCE=600 -O2 -march=native -std=c17"

set -x

$CC test_align.c -o bin/test_align || exit 1
$CC test_hash.c  -o bin/test_hash  || exit 1
$CC test_prng.c  -o bin/test_prng  || exit 1 # -lm needed if running to gather statistics
$CC test_sar.c   -o bin/test_sar   || exit 1
$CC test_round.c -o bin/test_round || exit 1
$CC test_avg.c   -o bin/test_avg   || exit 1

bin/test_align || exit 1
bin/test_hash  || exit 1
bin/test_prng  || exit 1
bin/test_sar   || exit 1
bin/test_round || exit 1
bin/test_avg   || exit 1

# PRNG batteries

# Note that when running an individual test in a TestU01 test battery,
# the probability of that test failing even though the generator is fine
# is roughly 0.2%.  Thus, when repeatedly running batteries that
# themselves contain a large number of tests, some test failures are
# expected.  So long as the test failures are are sporadic, don't occur
# in the same place when running multiple times with random seq and/or
# idx, and don't have p-values improbably close to 0
# (p<<<1/overall_num_tests_run) or 1 (1-p<<<1/overall_num_tests_run), it
# is expected and normal.  Because of this, TestU01 doesn't just fail if
# a handful of test fails ... need to read the reports produced to see
# how well the generator is actually behaving.

# Point the TESTU01 variable at where TestU01 is installed.  Testing
# thus far has been done with TestU01-1.2.3.

#TESTU01=~/nfs/TestU01
#
#$CC test_prng_battery.c -o bin/test_prng_battery -I$TESTU01/include $TESTU01/lib/libtestu01.a $TESTU01/lib/libprobdist.a $TESTU01/lib/libmylib.a -lm || exit 1
#
#bin/test_prng_battery 0 0 0 || exit 1 # FIPS-140.2 (seq 0, idx 0)
#bin/test_prng_battery 1 0 0 || exit 1 # PseudoDiehard (seq 0, idx 0)
#bin/test_prng_battery 2 0 0 || exit 1 # SmallCrush (seq 0, idx 0)
#bin/test_prng_battery 3 0 0 || exit 1 # Crush: Takes >~20 min (seq 0, idx 0)
#bin/test_prng_battery 4 0 0 || exit 1 # BigCrush: Takes >~3 hours (seq 0, idx 0)

echo all tests passed
